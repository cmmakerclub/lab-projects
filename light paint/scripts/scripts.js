"use strict";angular.module("lightPaintApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("lightPaintApp").controller("MainCtrl",["$scope",function(){}]),angular.module("lightPaintApp").controller("AboutCtrl",["$scope",function(){}]),angular.module("lightPaintApp").directive("gridPaint",function(){return{scope:{board:"=?",boardHeight:"=?",boardWidth:"=?",row:"=?",column:"=?"},template:'<canvas ng-style="canvasSize"></canvas>',restrict:"E",replace:!0,link:function(scope,element){function initBoard(){for(var x=new Array(scope.column),i=0;i<scope.column;i++){x[i]=new Array(scope.row);for(var j=0;j<scope.row;j++)x[i][j]={},x[i][j].isClick=!1,x[i][j].cell=new Cell(i,j)}return x}function Cell(row,column){this.row=row,this.column=column}function getCursorPosition(e){var x,y;void 0!=e.pageX&&void 0!=e.pageY?(x=e.pageX,y=e.pageY):(x=e.clientX+document.body.scrollLeft+document.documentElement.scrollLeft,y=e.clientY+document.body.scrollTop+document.documentElement.scrollTop),x-=canvas.offsetLeft,y-=canvas.offsetTop,x=Math.min(x,scope.boardWidth*rowWidth),y=Math.min(y,scope.boardHeight*rowHeight);var cell=new Cell(Math.floor(y/rowHeight),Math.floor(x/rowWidth));return cell}function onGridClick(e){var cell=getCursorPosition(e);console.log(cell);for(var i=0;i<scope.column;i++)for(var j=0;j<scope.row;j++)cell.row==scope.board[i][j].cell.row&&cell.column==scope.board[i][j].cell.column&&(scope.board[i][j].isClick=!scope.board[i][j].isClick);scope.$apply(),drawBoard()}function drawPiece(piece){var p=piece.cell,column=p.column,row=p.row,x=column*rowWidth+rowWidth/2,y=row*rowHeight+rowHeight/2,radius=rowWidth/2-rowHeight/10;radius=scope.row>scope.column?rowWidth/2-rowHeight/10:rowHeight/2-rowWidth/10,piece.isClick&&(context.beginPath(),context.arc(x,y,radius,0,2*Math.PI,!1),context.fill(),context.fillStyle="#000",context.stroke())}function initData(){scope.boardWidth=scope.boardWidth||400,scope.boardHeight=scope.boardHeight||400,scope.column=scope.column||10,scope.row=scope.row||10,scope.canvasSize={height:scope.boardHeight+.5*scope.row,width:scope.boardWidth+.5*scope.column},scope.board=initBoard(),canvas.width=scope.boardWidth+.5*scope.row,canvas.height=scope.boardHeight+.5*scope.column,rowWidth=scope.boardWidth/scope.row,rowHeight=scope.boardHeight/scope.column}function drawBoard(){context.clearRect(0,0,scope.boardWidth,scope.boardHeight),context.beginPath();for(var x=0;x<=scope.boardWidth;x+=rowWidth)context.moveTo(.5+x,0),context.lineTo(.5+x,scope.boardHeight);for(var y=0;y<=scope.boardHeight;y+=rowHeight)context.moveTo(0,.5+y),context.lineTo(scope.boardWidth,.5+y);context.strokeStyle="black",context.stroke();for(var i=0;i<scope.column;i++)for(var j=0;j<scope.row;j++)drawPiece(scope.board[i][j])}scope.$watch("row",function(){initData(),drawBoard()}),scope.$watch("column",function(){initData(),drawBoard()}),scope.$watch("boardWidth",function(){initData(),drawBoard()}),scope.$watch("boardHeight",function(){initData(),drawBoard()});var rowWidth,rowHeight,canvas=element[0],context=canvas.getContext("2d");canvas.addEventListener("click",onGridClick,!1),initData(),drawBoard()}}});